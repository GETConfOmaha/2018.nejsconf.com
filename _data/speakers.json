[{
	"name": "Amy Newell",
	"keynote": false,
	"title": "Suffering, Authenticity, and Productivity: Lessons I learned from Bipolar Disorder",
	"avatar_url": "/assets/img/speakers/filler_social.jpg",
	"social_avatar_url": "/assets/img/speakers/filler-gray.jpg",
	"twitter": "clarissa",
	"bio": "Clarissa Peterson is a UX designer and web developer based in Calgary, Canada. She frequently speaks at tech and design conferences and also teaches in the web developer fast-track program at the Southern Alberta Institute of Technology (SAIT). Clarissa is an instructor for Lynda.com (LinkedIn Learning) and the author of Learning Responsive Web Design: A Beginner‚Äôs Guide (O‚ÄôReilly Media).",
	"talk": "Are you responsible for the code you write? Ask the Volkswagen engineer who‚Äôs in prison for creating software that allowed their cars to ‚Äúcheat‚Äù on emissions tests. Or think of the ethical issues if you‚Äôre programming IoT devices that spy on users and report back to the company. The technology we create affects people‚Äôs lives. We need to be aware of how much power we‚Äôve been given and start taking responsibility for what we build.",
	"time": "x:00 xm"
},{
	"name": "Eva PenzyMoog",
	"keynote": true,
	"title": " Designing Against Domestic Violence ",
	"avatar_url": "/assets/img/speakers/filler_social.jpg",
	"social_avatar_url": "/assets/img/speakers/filler-gray.jpg",
	"twitter": "seldo",
	"bio": " I‚Äôve been a web developer for 22 years and I‚Äôm currently the co-founder and COO of npm, Inc.. I care deeply about making the web bigger, better and accessible to everyone.",
	"talk": "npm started out as a back-end tool for node.js developers writing server-side applications, but has become the tool of choice for front-end developers writing rich web applications. More than 80% of npm users are writing front-end code! This was a big change, so npm 5 was a big change to meet the needs of this new type of user. Now with npm 6, we‚Äôre refining that focus. This talk covers best practices for npm 6, including ways to dramatically improve your build times, how to use our new security features, and talk about what‚Äôs coming up for npm. In the second half, I cover what npm knows about JavaScript developers based on our survey of over 16,000 developers, what that means for the future of JavaScript, and the tooling and language choices the data suggests you should make as a developer today.",
	"time": "9:15 AM"
},{
	"name": "Jennifer Wadella",
	"title": "Hacking your work life __ balance to take over the world",
	"avatar_url": "/assets/img/speakers/filler_social.jpg",
	"social_avatar_url": "/assets/img/speakers/filler-gray.jpg",
	"twitter": "carmalou",
	"bio": "<p>Carmen Bourlon is a software developer in Oklahoma City, and frequent speaker at several local usergroups. Carmen‚Äôs projects include <a href='http://carmalou.com/margie'>Margie Map</a>, a map to highlight income in relation to public internet access and a <a href='http://carmalou.com/'>JavaScript blog</a>.</p><p>In her spare time, Carmen trains in the ways of The Force, and protects Hyrule from the evil Ganondorf.</p>",
	"talk": "<p>This talk will focus on uses for service workers, with special focus on Offline First and intermittent connectivity. Intermittent internet connection is something many people in the United States face, and it‚Äôs a huge hurdle to complete simple tasks like finding a bank balance ‚Äì or even more important tasks like searching for employment.</p><p>In a world divided by those who are connected, and those who aren‚Äôt, developers are in a unique position to help by writing apps with an Offline First focus. This particular talk focuses on using service workers to improve a user‚Äôs experience when connection is lost.</p><p>Service workers cache assets like HTML pages, pictures and even JavaScript files within the user‚Äôs browser. Once the assets are cached, the browser will load directly from the cache making the entire loading process faster. Even better, because the assets are already in the browser, the page will load without an Internet connection!</p><p>This talk will introduce service workers, explore use cases, and teach the audience how to implement service workers in their apps. We‚Äôll also touch on other great features of service workers like background sync and push notifications.</p>",
	"time": "10:00 AM"
},{
	"name": "Jennifer Wong",
	"title": "Empathetic Design Systems",
	"avatar_url": "/assets/img/speakers/filler_social.jpg",
	"social_avatar_url": "/assets/img/speakers/filler-gray.jpg",
	"twitter": "chantastic",
	"bio": "Michael is obsessed with essentialism and teaching. He‚Äôs a frontend architect at Planning Center and loves to teach React at reactpatterns.com. He adores his wife, two ridiculous kids, and ramen.",
	"talk": "<p>Developers want to write better, faster, safer code. They want to do it quickly, consistently, and happily.</p><p>The problem is we‚Äôve chosen the wrong tools. We obsess over the wrong metrics. We fetishize the structure and organization of the enemy with ‚Äúclean code‚Äù. ‚ÄúClean code‚Äù promised a future of fun and flexibility but results only in another master, vying for your precious time and attention.</p><p>I‚Äôve fought for ‚Äúclean code‚Äù my 10 years as a developer. For 10 years I lost and kept losing to this monster I was creating. I was taking my team with me. Now I empower devs and designers in the war against ‚Äúclean code‚Äù. I want developers and designers to win and keep winning.</p><p>After identifying the enemy, I‚Äôll demonstrate the shape a component takes when ‚Äúclean code‚Äù is dogma. I‚Äôll then write the same component as hot-garbage. I‚Äôll show everyone how to create and compose in a way that prepares for the future but doesn‚Äôt bother to predict it.</p><p>The talk will be very practical and entertaining intro to a topic better known as ‚Äúcomposite component design‚Äù.</p>",
	"time": "11:30 AM"
},{
	"name": "Katie Briggs",
	"title": "Research Meets Reality",
	"avatar_url": "/assets/img/speakers/filler_social.jpg",
	"social_avatar_url": "/assets/img/speakers/filler-gray.jpg",
	"twitter": "haubertdashery",
	"bio": "<p>I‚Äôm a software engineer at <a href='https://getflywheel.com'>Flywheel</a>, a web infrastructure startup in Omaha, Nebraska.</p><p>I‚Äôm also a former airborne cryptologic linguist for the US Air Force, fluent in Mandarin. Things you can ask me about include programming, cats, board games, karaoke, and building applications that convert songs into auto-tuned cat meows. Things I‚Äôll have to kill you if you ask me about: the airborne linguist part. Also, I like to make emojis look like they‚Äôre farting. üêàüí®</p>",
	"talk": "<p>The goal of this talk is to show a basic introduction to serverless web apps without needing knowledge of other unnecessary dependencies or advanced devops expertise.</p><p>I‚Äôll be using vanilla JavaScript and Netlify Functions (a simple, but powerful wrapper around AWS Lambda), to build Snowmaha, a simple web app that displays whether or not it is currently snowing in Omaha.</p><p>You can‚Äôt use Ajax to connect to a third-party api because of CORS (Cross-Origin Resource Scripting). This means that building Snowmaha using only JavaScript is impossible unless some server-side code handles the request to the third-party api. Someone with above-average devops knowledge could setup a Lamda function and enable CORS for your site, but most people aren‚Äôt interested in learning how to use AWS Lamda, and why should they be? It has a horribly complex UX! Netlify Functions simplifies the process and sets up CORS for you. Now your site can make an Ajax request through Functions to Lamda and all of a sudden developers that only know HTML, CSS, and JavaScript are building ‚Äúserverless‚Äù applications with the power of server-side functionality.</p>",
	"time": "2:30 PM"
},{
	"name": "Ash Banaszek",
	"title": "Fail Faster: Quick UX Design Techniques to Drive Toward Success",
	"avatar_url": "/assets/img/speakers/filler_social.jpg",
	"social_avatar_url": "/assets/img/speakers/filler-gray.jpg",
	"twitter": "needToGet",
	"bio": "<p>I‚Äôm a software engineer at <a href='https://getflywheel.com'>Flywheel</a>, a web infrastructure startup in Omaha, Nebraska.</p><p>I‚Äôm also a former airborne cryptologic linguist for the US Air Force, fluent in Mandarin. Things you can ask me about include programming, cats, board games, karaoke, and building applications that convert songs into auto-tuned cat meows. Things I‚Äôll have to kill you if you ask me about: the airborne linguist part. Also, I like to make emojis look like they‚Äôre farting. üêàüí®</p>",
	"talk": "<p>The goal of this talk is to show a basic introduction to serverless web apps without needing knowledge of other unnecessary dependencies or advanced devops expertise.</p><p>I‚Äôll be using vanilla JavaScript and Netlify Functions (a simple, but powerful wrapper around AWS Lambda), to build Snowmaha, a simple web app that displays whether or not it is currently snowing in Omaha.</p><p>You can‚Äôt use Ajax to connect to a third-party api because of CORS (Cross-Origin Resource Scripting). This means that building Snowmaha using only JavaScript is impossible unless some server-side code handles the request to the third-party api. Someone with above-average devops knowledge could setup a Lamda function and enable CORS for your site, but most people aren‚Äôt interested in learning how to use AWS Lamda, and why should they be? It has a horribly complex UX! Netlify Functions simplifies the process and sets up CORS for you. Now your site can make an Ajax request through Functions to Lamda and all of a sudden developers that only know HTML, CSS, and JavaScript are building ‚Äúserverless‚Äù applications with the power of server-side functionality.</p>",
	"time": "3:30 PM"
}]